// Mocks generated by Mockito 5.3.0 from annotations
// in ditonton/test/presentation/bloc/tv/watchlist_tv_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/domain/entities/movie/movie_detail.dart' as _i11;
import 'package:ditonton/domain/entities/tv/tv.dart' as _i8;
import 'package:ditonton/domain/entities/tv/tv_detail.dart' as _i12;
import 'package:ditonton/domain/repositories/movie/movie_repository.dart'
    as _i3;
import 'package:ditonton/domain/repositories/tv/tv_repository.dart' as _i4;
import 'package:ditonton/domain/usecases/movie/get_watchlist_status.dart'
    as _i9;
import 'package:ditonton/domain/usecases/remove_watchlist.dart' as _i13;
import 'package:ditonton/domain/usecases/save_watchlist.dart' as _i10;
import 'package:ditonton/domain/usecases/tv/get_watchlist_tv.dart' as _i5;
import 'package:ditonton/utils/failure.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeMovieRepository_1 extends _i1.SmartFake
    implements _i3.MovieRepository {
  _FakeMovieRepository_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTVRepository_2 extends _i1.SmartFake implements _i4.TVRepository {
  _FakeTVRepository_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [GetWatchlistTV].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTV extends _i1.Mock implements _i5.GetWatchlistTV {
  MockGetWatchlistTV() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.TV>>>.value(
              _FakeEither_0<_i7.Failure, List<_i8.TV>>(
                  this, Invocation.method(#execute, [])))) as _i6
          .Future<_i2.Either<_i7.Failure, List<_i8.TV>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i9.GetWatchListStatus {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue:
                  _FakeMovieRepository_1(this, Invocation.getter(#repository)))
          as _i3.MovieRepository);
  @override
  _i4.TVRepository get tvRepository =>
      (super.noSuchMethod(Invocation.getter(#tvRepository),
              returnValue:
                  _FakeTVRepository_2(this, Invocation.getter(#tvRepository)))
          as _i4.TVRepository);
  @override
  _i6.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: _i6.Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<bool> executeTV(int? id) =>
      (super.noSuchMethod(Invocation.method(#executeTV, [id]),
          returnValue: _i6.Future<bool>.value(false)) as _i6.Future<bool>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends _i1.Mock implements _i10.SaveWatchlist {
  MockSaveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue:
                  _FakeMovieRepository_1(this, Invocation.getter(#repository)))
          as _i3.MovieRepository);
  @override
  _i4.TVRepository get tvRepository =>
      (super.noSuchMethod(Invocation.getter(#tvRepository),
              returnValue:
                  _FakeTVRepository_2(this, Invocation.getter(#tvRepository)))
          as _i4.TVRepository);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> execute(
          _i11.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#execute, [movie]))))
          as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> executeTV(_i12.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#executeTV, [tv]),
              returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#executeTV, [tv]))))
          as _i6.Future<_i2.Either<_i7.Failure, String>>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends _i1.Mock implements _i13.RemoveWatchlist {
  MockRemoveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue:
                  _FakeMovieRepository_1(this, Invocation.getter(#repository)))
          as _i3.MovieRepository);
  @override
  _i4.TVRepository get tvRepository =>
      (super.noSuchMethod(Invocation.getter(#tvRepository),
              returnValue:
                  _FakeTVRepository_2(this, Invocation.getter(#tvRepository)))
          as _i4.TVRepository);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> execute(
          _i11.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#execute, [movie]))))
          as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> executeTV(_i12.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#executeTV, [tv]),
              returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#executeTV, [tv]))))
          as _i6.Future<_i2.Either<_i7.Failure, String>>);
}
