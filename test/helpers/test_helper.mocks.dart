// Mocks generated by Mockito 5.3.0 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:convert' as _i29;
import 'dart:typed_data' as _i30;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/data/datasources/db/database_helper.dart' as _i26;
import 'package:ditonton/data/datasources/movie/movie_local_data_source.dart'
    as _i20;
import 'package:ditonton/data/datasources/movie/movie_remote_data_source.dart'
    as _i16;
import 'package:ditonton/data/datasources/tv/tv_local_data_source.dart' as _i24;
import 'package:ditonton/data/datasources/tv/tv_remote_data_source.dart'
    as _i22;
import 'package:ditonton/data/models/genre_model.dart' as _i18;
import 'package:ditonton/data/models/movie/movie_detail_model.dart' as _i3;
import 'package:ditonton/data/models/movie/movie_model.dart' as _i17;
import 'package:ditonton/data/models/movie/movie_table.dart' as _i21;
import 'package:ditonton/data/models/movie/video_model.dart' as _i19;
import 'package:ditonton/data/models/tv/tv_detail_model.dart' as _i4;
import 'package:ditonton/data/models/tv/tv_model.dart' as _i23;
import 'package:ditonton/data/models/tv/tv_table.dart' as _i25;
import 'package:ditonton/domain/entities/genre.dart' as _i10;
import 'package:ditonton/domain/entities/movie/movie.dart' as _i9;
import 'package:ditonton/domain/entities/movie/movie_detail.dart' as _i12;
import 'package:ditonton/domain/entities/movie/video.dart' as _i11;
import 'package:ditonton/domain/entities/tv/tv.dart' as _i14;
import 'package:ditonton/domain/entities/tv/tv_detail.dart' as _i15;
import 'package:ditonton/domain/repositories/movie/movie_repository.dart'
    as _i6;
import 'package:ditonton/domain/repositories/tv/tv_repository.dart' as _i13;
import 'package:ditonton/utils/failure.dart' as _i8;
import 'package:ditonton/utils/network_info.dart' as _i28;
import 'package:http/http.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite_sqlcipher/sqflite.dart' as _i27;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeMovieDetailResponse_1 extends _i1.SmartFake
    implements _i3.MovieDetailResponse {
  _FakeMovieDetailResponse_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTVDetailResponse_2 extends _i1.SmartFake
    implements _i4.TVDetailResponse {
  _FakeTVDetailResponse_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_3 extends _i1.SmartFake implements _i5.Response {
  _FakeResponse_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeStreamedResponse_4 extends _i1.SmartFake
    implements _i5.StreamedResponse {
  _FakeStreamedResponse_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i6.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
                          this, Invocation.method(#getNowPlayingMovies, []))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
                          this, Invocation.method(#getPopularMovies, []))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
                          this, Invocation.method(#getTopRatedMovies, []))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> getUpcomingMovies() =>
      (super.noSuchMethod(Invocation.method(#getUpcomingMovies, []),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
                          this, Invocation.method(#getUpcomingMovies, []))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i10.Genre>>> getGenreMovies() =>
      (super.noSuchMethod(Invocation.method(#getGenreMovies, []),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i10.Genre>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i10.Genre>>(
                          this, Invocation.method(#getGenreMovies, []))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i10.Genre>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> getMovieGenreList(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieGenreList, [id]),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
                          this, Invocation.method(#getMovieGenreList, [id]))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i11.Videos>>> getMovieVideo(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieVideo, [id]),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i11.Videos>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i11.Videos>>(
                          this, Invocation.method(#getMovieVideo, [id]))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i11.Videos>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i12.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, _i12.MovieDetail>>.value(
                      _FakeEither_0<_i8.Failure, _i12.MovieDetail>(
                          this, Invocation.method(#getMovieDetail, [id]))))
          as _i7.Future<_i2.Either<_i8.Failure, _i12.MovieDetail>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> getMovieRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.Movie>>(this,
                          Invocation.method(#getMovieRecommendations, [id]))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> getMovieSimilar(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieSimilar, [id]),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
                          this, Invocation.method(#getMovieSimilar, [id]))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
                          this, Invocation.method(#searchMovies, [query]))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> saveWatchlist(
          _i12.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [movie]),
              returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
                  _FakeEither_0<_i8.Failure, String>(
                      this, Invocation.method(#saveWatchlist, [movie]))))
          as _i7.Future<_i2.Either<_i8.Failure, String>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> removeWatchlist(
          _i12.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
              returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
                  _FakeEither_0<_i8.Failure, String>(
                      this, Invocation.method(#removeWatchlist, [movie]))))
          as _i7.Future<_i2.Either<_i8.Failure, String>>);
  @override
  _i7.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: _i7.Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
                          this, Invocation.method(#getWatchlistMovies, []))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);
}

/// A class which mocks [TVRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRepository extends _i1.Mock implements _i13.TVRepository {
  MockTVRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>> getNowPlayingTV() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTV, []),
          returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>>.value(
              _FakeEither_0<_i8.Failure, List<_i14.TV>>(
                  this, Invocation.method(#getNowPlayingTV, [])))) as _i7
          .Future<_i2.Either<_i8.Failure, List<_i14.TV>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>> getPopularTV() =>
      (super.noSuchMethod(Invocation.method(#getPopularTV, []),
          returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>>.value(
              _FakeEither_0<_i8.Failure, List<_i14.TV>>(
                  this, Invocation.method(#getPopularTV, [])))) as _i7
          .Future<_i2.Either<_i8.Failure, List<_i14.TV>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>> getTVGenreList(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVGenreList, [id]),
          returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>>.value(
              _FakeEither_0<_i8.Failure, List<_i14.TV>>(
                  this, Invocation.method(#getTVGenreList, [id])))) as _i7
          .Future<_i2.Either<_i8.Failure, List<_i14.TV>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i10.Genre>>> getGenreTV() =>
      (super.noSuchMethod(Invocation.method(#getGenreTV, []),
              returnValue:
                  _i7.Future<_i2.Either<_i8.Failure, List<_i10.Genre>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i10.Genre>>(
                          this, Invocation.method(#getGenreTV, []))))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i10.Genre>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>> getTopRatedTV() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTV, []),
          returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>>.value(
              _FakeEither_0<_i8.Failure, List<_i14.TV>>(
                  this, Invocation.method(#getTopRatedTV, [])))) as _i7
          .Future<_i2.Either<_i8.Failure, List<_i14.TV>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i15.TVDetail>> getTVDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVDetail, [id]),
          returnValue: _i7.Future<_i2.Either<_i8.Failure, _i15.TVDetail>>.value(
              _FakeEither_0<_i8.Failure, _i15.TVDetail>(
                  this, Invocation.method(#getTVDetail, [id])))) as _i7
          .Future<_i2.Either<_i8.Failure, _i15.TVDetail>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>> getTVRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVRecommendations, [id]),
          returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>>.value(
              _FakeEither_0<_i8.Failure, List<_i14.TV>>(
                  this, Invocation.method(#getTVRecommendations, [id])))) as _i7
          .Future<_i2.Either<_i8.Failure, List<_i14.TV>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>> searchTV(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTV, [query]),
          returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>>.value(
              _FakeEither_0<_i8.Failure, List<_i14.TV>>(
                  this, Invocation.method(#searchTV, [query])))) as _i7
          .Future<_i2.Either<_i8.Failure, List<_i14.TV>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> saveWatchlist(
          _i15.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tv]),
              returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
                  _FakeEither_0<_i8.Failure, String>(
                      this, Invocation.method(#saveWatchlist, [tv]))))
          as _i7.Future<_i2.Either<_i8.Failure, String>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>> getTVSimilar(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVSimilar, [id]),
          returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>>.value(
              _FakeEither_0<_i8.Failure, List<_i14.TV>>(
                  this, Invocation.method(#getTVSimilar, [id])))) as _i7
          .Future<_i2.Either<_i8.Failure, List<_i14.TV>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> removeWatchlist(
          _i15.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tv]),
              returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
                  _FakeEither_0<_i8.Failure, String>(
                      this, Invocation.method(#removeWatchlist, [tv]))))
          as _i7.Future<_i2.Either<_i8.Failure, String>>);
  @override
  _i7.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: _i7.Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>> getWatchlistTV() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTV, []),
          returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i14.TV>>>.value(
              _FakeEither_0<_i8.Failure, List<_i14.TV>>(
                  this, Invocation.method(#getWatchlistTV, [])))) as _i7
          .Future<_i2.Either<_i8.Failure, List<_i14.TV>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i16.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i17.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
              returnValue:
                  _i7.Future<List<_i17.MovieModel>>.value(<_i17.MovieModel>[]))
          as _i7.Future<List<_i17.MovieModel>>);
  @override
  _i7.Future<List<_i17.MovieModel>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
              returnValue:
                  _i7.Future<List<_i17.MovieModel>>.value(<_i17.MovieModel>[]))
          as _i7.Future<List<_i17.MovieModel>>);
  @override
  _i7.Future<List<_i17.MovieModel>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
              returnValue:
                  _i7.Future<List<_i17.MovieModel>>.value(<_i17.MovieModel>[]))
          as _i7.Future<List<_i17.MovieModel>>);
  @override
  _i7.Future<List<_i17.MovieModel>> getUpcomingMovies() =>
      (super.noSuchMethod(Invocation.method(#getUpcomingMovies, []),
              returnValue:
                  _i7.Future<List<_i17.MovieModel>>.value(<_i17.MovieModel>[]))
          as _i7.Future<List<_i17.MovieModel>>);
  @override
  _i7.Future<List<_i18.GenreModel>> getGenreMovies() =>
      (super.noSuchMethod(Invocation.method(#getGenreMovies, []),
              returnValue:
                  _i7.Future<List<_i18.GenreModel>>.value(<_i18.GenreModel>[]))
          as _i7.Future<List<_i18.GenreModel>>);
  @override
  _i7.Future<List<_i19.VideosModel>> getMovieVideo(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieVideo, [id]),
          returnValue: _i7.Future<List<_i19.VideosModel>>.value(
              <_i19.VideosModel>[])) as _i7.Future<List<_i19.VideosModel>>);
  @override
  _i7.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
              returnValue: _i7.Future<_i3.MovieDetailResponse>.value(
                  _FakeMovieDetailResponse_1(
                      this, Invocation.method(#getMovieDetail, [id]))))
          as _i7.Future<_i3.MovieDetailResponse>);
  @override
  _i7.Future<List<_i17.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
              returnValue:
                  _i7.Future<List<_i17.MovieModel>>.value(<_i17.MovieModel>[]))
          as _i7.Future<List<_i17.MovieModel>>);
  @override
  _i7.Future<List<_i17.MovieModel>> getMovieGenreList(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieGenreList, [id]),
              returnValue:
                  _i7.Future<List<_i17.MovieModel>>.value(<_i17.MovieModel>[]))
          as _i7.Future<List<_i17.MovieModel>>);
  @override
  _i7.Future<List<_i17.MovieModel>> getMovieSimilar(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieSimilar, [id]),
              returnValue:
                  _i7.Future<List<_i17.MovieModel>>.value(<_i17.MovieModel>[]))
          as _i7.Future<List<_i17.MovieModel>>);
  @override
  _i7.Future<List<_i17.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
              returnValue:
                  _i7.Future<List<_i17.MovieModel>>.value(<_i17.MovieModel>[]))
          as _i7.Future<List<_i17.MovieModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i20.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> insertWatchlist(_i21.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: _i7.Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<String> removeWatchlist(_i21.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: _i7.Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i21.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: _i7.Future<_i21.MovieTable?>.value())
          as _i7.Future<_i21.MovieTable?>);
  @override
  _i7.Future<List<_i21.MovieTable>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue:
                  _i7.Future<List<_i21.MovieTable>>.value(<_i21.MovieTable>[]))
          as _i7.Future<List<_i21.MovieTable>>);
  @override
  _i7.Future<void> cacheNowPlayingMovies(List<_i21.MovieTable>? movies) =>
      (super.noSuchMethod(Invocation.method(#cacheNowPlayingMovies, [movies]),
              returnValue: _i7.Future<void>.value(),
              returnValueForMissingStub: _i7.Future<void>.value())
          as _i7.Future<void>);
  @override
  _i7.Future<List<_i21.MovieTable>> getCachedNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getCachedNowPlayingMovies, []),
              returnValue:
                  _i7.Future<List<_i21.MovieTable>>.value(<_i21.MovieTable>[]))
          as _i7.Future<List<_i21.MovieTable>>);
}

/// A class which mocks [TVRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRemoteDataSource extends _i1.Mock
    implements _i22.TVRemoteDataSource {
  MockTVRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i23.TVModel>> getNowPlayingTV() => (super.noSuchMethod(
          Invocation.method(#getNowPlayingTV, []),
          returnValue: _i7.Future<List<_i23.TVModel>>.value(<_i23.TVModel>[]))
      as _i7.Future<List<_i23.TVModel>>);
  @override
  _i7.Future<List<_i23.TVModel>> getPopularTV() => (super.noSuchMethod(
          Invocation.method(#getPopularTV, []),
          returnValue: _i7.Future<List<_i23.TVModel>>.value(<_i23.TVModel>[]))
      as _i7.Future<List<_i23.TVModel>>);
  @override
  _i7.Future<List<_i23.TVModel>> getTopRatedTV() => (super.noSuchMethod(
          Invocation.method(#getTopRatedTV, []),
          returnValue: _i7.Future<List<_i23.TVModel>>.value(<_i23.TVModel>[]))
      as _i7.Future<List<_i23.TVModel>>);
  @override
  _i7.Future<List<_i23.TVModel>> getTVSimilar(int? id) => (super.noSuchMethod(
          Invocation.method(#getTVSimilar, [id]),
          returnValue: _i7.Future<List<_i23.TVModel>>.value(<_i23.TVModel>[]))
      as _i7.Future<List<_i23.TVModel>>);
  @override
  _i7.Future<_i4.TVDetailResponse> getTVDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVDetail, [id]),
              returnValue: _i7.Future<_i4.TVDetailResponse>.value(
                  _FakeTVDetailResponse_2(
                      this, Invocation.method(#getTVDetail, [id]))))
          as _i7.Future<_i4.TVDetailResponse>);
  @override
  _i7.Future<List<_i23.TVModel>> getTVRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVRecommendations, [id]),
              returnValue:
                  _i7.Future<List<_i23.TVModel>>.value(<_i23.TVModel>[]))
          as _i7.Future<List<_i23.TVModel>>);
  @override
  _i7.Future<List<_i18.GenreModel>> getGenreTV() =>
      (super.noSuchMethod(Invocation.method(#getGenreTV, []),
              returnValue:
                  _i7.Future<List<_i18.GenreModel>>.value(<_i18.GenreModel>[]))
          as _i7.Future<List<_i18.GenreModel>>);
  @override
  _i7.Future<List<_i23.TVModel>> getTVGenreList(int? id) => (super.noSuchMethod(
          Invocation.method(#getTVGenreList, [id]),
          returnValue: _i7.Future<List<_i23.TVModel>>.value(<_i23.TVModel>[]))
      as _i7.Future<List<_i23.TVModel>>);
  @override
  _i7.Future<List<_i23.TVModel>> searchTV(String? query) => (super.noSuchMethod(
          Invocation.method(#searchTV, [query]),
          returnValue: _i7.Future<List<_i23.TVModel>>.value(<_i23.TVModel>[]))
      as _i7.Future<List<_i23.TVModel>>);
}

/// A class which mocks [TVLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVLocalDataSource extends _i1.Mock implements _i24.TVLocalDataSource {
  MockTVLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> insertWatchlist(_i25.TVTable? tv) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [tv]),
          returnValue: _i7.Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<String> removeWatchlist(_i25.TVTable? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tv]),
          returnValue: _i7.Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i25.TVTable?> getTVById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVById, [id]),
              returnValue: _i7.Future<_i25.TVTable?>.value())
          as _i7.Future<_i25.TVTable?>);
  @override
  _i7.Future<List<_i25.TVTable>> getWatchlistTV() => (super.noSuchMethod(
          Invocation.method(#getWatchlistTV, []),
          returnValue: _i7.Future<List<_i25.TVTable>>.value(<_i25.TVTable>[]))
      as _i7.Future<List<_i25.TVTable>>);
  @override
  _i7.Future<void> cacheNowPlayingTV(List<_i25.TVTable>? tv) =>
      (super.noSuchMethod(Invocation.method(#cacheNowPlayingTV, [tv]),
              returnValue: _i7.Future<void>.value(),
              returnValueForMissingStub: _i7.Future<void>.value())
          as _i7.Future<void>);
  @override
  _i7.Future<List<_i25.TVTable>> getCachedNowPlayingTV() => (super.noSuchMethod(
          Invocation.method(#getCachedNowPlayingTV, []),
          returnValue: _i7.Future<List<_i25.TVTable>>.value(<_i25.TVTable>[]))
      as _i7.Future<List<_i25.TVTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i26.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i27.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: _i7.Future<_i27.Database?>.value())
          as _i7.Future<_i27.Database?>);
  @override
  _i7.Future<void> insertCacheTransaction(
          List<_i21.MovieTable>? movies, String? category) =>
      (super.noSuchMethod(
              Invocation.method(#insertCacheTransaction, [movies, category]),
              returnValue: _i7.Future<void>.value(),
              returnValueForMissingStub: _i7.Future<void>.value())
          as _i7.Future<void>);
  @override
  _i7.Future<void> insertCacheTransactionTV(
          List<_i25.TVTable>? tvs, String? category) =>
      (super.noSuchMethod(
              Invocation.method(#insertCacheTransactionTV, [tvs, category]),
              returnValue: _i7.Future<void>.value(),
              returnValueForMissingStub: _i7.Future<void>.value())
          as _i7.Future<void>);
  @override
  _i7.Future<List<Map<String, dynamic>>> getCacheMovies(String? category) =>
      (super.noSuchMethod(Invocation.method(#getCacheMovies, [category]),
              returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i7.Future<List<Map<String, dynamic>>>);
  @override
  _i7.Future<List<Map<String, dynamic>>> getCacheTV(String? category) =>
      (super.noSuchMethod(Invocation.method(#getCacheTV, [category]),
              returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i7.Future<List<Map<String, dynamic>>>);
  @override
  _i7.Future<int> clearCache(String? category) =>
      (super.noSuchMethod(Invocation.method(#clearCache, [category]),
          returnValue: _i7.Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<int> clearCacheTV(String? category) =>
      (super.noSuchMethod(Invocation.method(#clearCacheTV, [category]),
          returnValue: _i7.Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<int> insertWatchlist(_i21.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: _i7.Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<int> insertWatchlistTV(_i25.TVTable? tv) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlistTV, [tv]),
          returnValue: _i7.Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<int> removeWatchlist(_i21.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: _i7.Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<int> removeWatchlistTV(_i25.TVTable? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistTV, [tv]),
          returnValue: _i7.Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: _i7.Future<Map<String, dynamic>?>.value())
          as _i7.Future<Map<String, dynamic>?>);
  @override
  _i7.Future<Map<String, dynamic>?> getTVById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVById, [id]),
              returnValue: _i7.Future<Map<String, dynamic>?>.value())
          as _i7.Future<Map<String, dynamic>?>);
  @override
  _i7.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i7.Future<List<Map<String, dynamic>>>);
  @override
  _i7.Future<List<Map<String, dynamic>>> getWatchlistTV() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTV, []),
              returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i7.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i28.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: _i7.Future<bool>.value(false)) as _i7.Future<bool>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i5.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i5.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
                  this, Invocation.method(#head, [url], {#headers: headers}))))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
                  this, Invocation.method(#get, [url], {#headers: headers}))))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#post, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
                  this,
                  Invocation.method(#post, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#put, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
                  this,
                  Invocation.method(#put, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#patch, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
                  this,
                  Invocation.method(#patch, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#delete, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
                  this,
                  Invocation.method(#delete, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: _i7.Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i30.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: _i7.Future<_i30.Uint8List>.value(_i30.Uint8List(0)))
          as _i7.Future<_i30.Uint8List>);
  @override
  _i7.Future<_i5.StreamedResponse> send(_i5.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue: _i7.Future<_i5.StreamedResponse>.value(
                  _FakeStreamedResponse_4(
                      this, Invocation.method(#send, [request]))))
          as _i7.Future<_i5.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
